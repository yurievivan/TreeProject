<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings
        version="2.1"
        xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
            http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">
    <named-native-query name="getPath">
        <query>
           <![CDATA[           
           SELECT string_agg(ancestor.name,:delimiter ORDER BY ancestor.lft ASC) 
           FROM nested_sets child
           INNER JOIN nested_sets ancestor
           ON (child.lft BETWEEN ancestor.lft AND ancestor.rgt)
           WHERE child.id = :id
            ]]>   
        </query>
        <hint name="org.hibernate.readOnly" value="true"/>
        <hint name="org.hibernate.comment" value="Get Path By ID"/>
    </named-native-query>
    
    <named-native-query name="getRoot" 
                        result-class="nested.sets.tree.NestedSetsTree">
        <query>
           <![CDATA[        
              SELECT *
              FROM   nested_sets
              WHERE  lft = (SELECT Min(lft)
                            FROM   nested_sets) 
            ]]>
        </query>
        <hint name="org.hibernate.comment" value="Get Root By ID"/>
    </named-native-query>
    
    <named-native-query name="delete">
        <query>
           <![CDATA[
            DELETE FROM nested_sets WHERE id IN (
            SELECT descendant.id FROM nested_sets parent
            INNER JOIN nested_sets descendant
            ON (descendant.lft BETWEEN parent.lft and parent.rgt)
            WHERE parent.id = :id)
            ]]>
        </query>
        <hint name="org.hibernate.comment" value="Delete Node By ID"/>
    </named-native-query>
    
    <named-native-query name="getAllParents" 
                        result-set-mapping="NestedSetsTreeWithLevelMapping">
        <query> 
            <![CDATA[        
               SELECT p.id, p.name, p.lft, p.rgt, ROW_NUMBER() over(ORDER BY p.lft ASC) AS LEVEL 
               FROM nested_sets n, nested_sets p
               WHERE n.id = :id AND p.lft < n.lft AND p.rgt > n.rgt
            ]]>
        </query>
        <hint name="org.hibernate.comment" value="Get Parents By ID"/>
    </named-native-query>
    
    <named-native-query name="getAllСhildren" 
                        result-set-mapping="NestedSetsTreeWithLevelMapping">
        <query>
            <![CDATA[         
           with node as
            (SELECT descendant.id, descendant.name, descendant.lft, descendant.rgt, COUNT(*) AS level
            FROM
	    (SELECT ch.*
             FROM nested_sets n, nested_sets ch
             WHERE n.id = :id AND ch.lft > n.lft AND ch.rgt < n.rgt) descendant, nested_sets parent
            WHERE descendant.lft BETWEEN parent.lft AND parent.rgt
            GROUP BY descendant.id, descendant.name, descendant.lft, descendant.rgt)
            SELECT id, name, lft, rgt, (level - (SELECT min(level) FROM node) +1) as level
            FROM node
            ]]>
        </query>
        <hint name="org.hibernate.comment" value="Get Сhildren By ID"/>
    </named-native-query>
    
    <sql-result-set-mapping name="NestedSetsTreeWithLevelMapping">
        <entity-result entity-class="nested.sets.tree.NestedSetsTree"/>
        <column-result name="level" class="java.lang.Integer"/>
    </sql-result-set-mapping>
    
</entity-mappings>
